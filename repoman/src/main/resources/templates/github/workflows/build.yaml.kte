@import org.metaborg.repoman.meta.RepoMetadata
@param meta: RepoMetadata
---
@if(meta.files.githubWorkflows.update)
# !! THIS FILE WAS GENERATED USING repoman !!
# Modify `repo.yaml` instead and use `repoman` to update this file
# See: https://github.com/metaborg/metaborg-gradle/

@endif
name: 'Build & Publish'

on:  # yamllint disable-line rule:truthy
  push:
  pull_request:
    branches:
      - ${meta.mainBranch}

jobs:
  build:
    uses: metaborg/actions/.github/workflows/gradle-build-matrix.yaml@main
    with:
      gradle-command: |
        gradle ${meta.files.githubWorkflows.buildTask}
  @if(meta.files.githubWorkflows.publishSnapshot)
  # Publish snapshots
  publish-snapshot:
    uses: metaborg/actions/.github/workflows/gradle-publish.yaml@main
    with:
      gradle-command: |
        gradle ${meta.files.githubWorkflows.publishTask} -Pgitonium.isSnapshot=true
      gradle-version-command: |
        gradle -q ${meta.files.githubWorkflows.printVersionTask} -Pgitonium.isSnapshot=true
    if: "github.event_name == 'push' && github.ref == 'refs/heads/${meta.mainBranch}'"
    needs: [build]
    secrets:
      METABORG_ARTIFACTS_USERNAME: ${'$'}{{ secrets.METABORG_ARTIFACTS_USERNAME }}
      METABORG_ARTIFACTS_PASSWORD: ${'$'}{{ secrets.METABORG_ARTIFACTS_PASSWORD }}
  @endif
  @if(meta.files.githubWorkflows.publishRelease)
  # Publish releases
  publish-release:
    uses: metaborg/actions/.github/workflows/gradle-publish.yaml@main
    with:
      gradle-command: |
        gradle ${meta.files.githubWorkflows.publishTask}
      gradle-version-command: |
        gradle -q ${meta.files.githubWorkflows.printVersionTask}
    if: "github.event_name == 'push' && startsWith(github.ref, 'refs/tags/${meta.releaseTagPrefix}')"
    needs: [build]
    secrets:
      METABORG_ARTIFACTS_USERNAME: ${'$'}{{ secrets.METABORG_ARTIFACTS_USERNAME }}
      METABORG_ARTIFACTS_PASSWORD: ${'$'}{{ secrets.METABORG_ARTIFACTS_PASSWORD }}
  @endif